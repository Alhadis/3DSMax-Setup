Node 
{ 
background-color: rgb( 177, 187, 196 ); 
/*outline-style: dashed; outline-width: 2px; outline-color: rgb( 255,255, 255 );
outline-offset: 2px;
outline-radius: 8px; 
outline-top-left-radius: 0px;*/
margin: 7px; 
border-style: solid; 
border-width: 1px;
border-color: rgb( 74, 87, 102 );
border-radius: 6px; border-top-left-radius: 0px; 
border-bottom-right-is-flattened: 1; 
}

Node:selected 
{ 
border-color: rgb( 255, 255, 255 ); 
color: white; 
}

Node:hover 
{ 
background-color: rgb(189,200, 210); 
}

Node > Header 
{ 
color: black;
background-color: rgb(250, 150,0); 
border-bottom-style:solid; 
border-bottom-width:1px; 
border-color: rgb( 74, 87, 102 ); 
border-top-right-radius: 4px; 
text-align: right;
font: 11px "Arial";
}

Node:hover > Header 
{ 
background-color: rgb(255, 170, 20); 
}

Node:selected > Header  
{ 
color: white; 
}

Node:off > Header
{
background-color: rgb( 120, 120, 120 );
color: rgb( 200, 200, 200 );
}


Socket 
{ 
width: 12px; 
height: 12px; 
min-width: 12px; 
min-height: 12px; 
max-width: 12px; 
max-height: 12px; 
background-color: rgb( 167, 182, 199 ); 
border-shape: circle; 
border-style:solid; 
border-width:1px; 
border-color: rgb( 74, 87, 102 ); 
}

Socket:hover  { background-color: rgb( 187, 202, 219 ); }
Socket:state-linked { background-color: rgb(203, 255, 0); }
Socket:state-linked:hover { background-color: rgb(255, 255, 200); }
Socket:state-valid { background-color: rgb(160, 255, 0); }
Socket:state-invalid { background-color: rgb(255, 50, 30); }

SocketProxy
{ 
	background-color: rgb(203, 255, 0); border-style:solid; border-width:1px; border-color: rgb( 74, 87, 102 ); 
	width: 6px; height: 12px; min-width: 6px; min-height: 12px; max-width: 6px; max-height: 12px; 
}
SocketProxy[direction=in]
{
	border-bottom-left-radius: 6px;  border-top-left-radius: 6px;
}
SocketProxy[direction=out]
{
	border-bottom-right-radius: 6px;  border-top-right-radius: 6px;
}

ParamGroup SocketProxy[direction=in]
{
	width: 6px; height: 11px; min-width: 6px; min-height: 11px; max-width: 6px; max-height: 11px; 
	border-right-style: none;
	border-bottom-left-radius: 6px;  border-top-left-radius: 6px;
	padding-right: -1px;
}

Edge { background-color: rgb(255, 0, 0); }
Edge:selected { background-color: rgb(255, 255, 255); }


Node  Content 
{ 
spacing: 2px; margin-top:2px;
}

Slot 
{
color: black;
margin-left: 31px;
margin-right: 2px;
padding-left: -23px;
padding-right: 5px;
max-height: 22px;
padding-top:0px;
padding-bottom:0px;
font: 11px "Arial";
spacing: 4px;
} 

Slot:off
{
color: grey;
}

Slot:selected
{ 
background-color: rgb( 230, 240, 250 );
/*padding-left: 30px; <-- currently not respected seems to be a bug in the CCS_LinearLayout which takes not care of pseudos
spacing: 10px;*/
}


Slot:state-actionupdating
{ 
background-color: rgb( 0, 160, 0 );
}

Slot:state-instanced
{ 
font: italic;
}

Slot:state-instance-selected
{ 
padding-left: -24px;
padding-top: -1px;
background-color: rgb( 200, 210, 220 );
border-style: solid;
border-width:1px;
border-color: rgb( 255, 255, 255 );
}

PFCommentsIcon
{
background-image: url(pflow_has_comment.png);
background-repeat:no-repeat;
min-width: 10px; 
min-height: 10px; 
max-width: 10px; 
max-height: 10px;
}

ColorSwatch
{ 
width: 12px; 
height: 12px; 
min-width: 12px; 
min-height: 12px; 
max-width: 12px; 
max-height: 12px; 
border-shape: circle; 
border-style:solid; 
border-width:1px; 
border-color: rgb( 74, 87, 102 ); 
}

ColorSwatch:off
{
background-color: rgb(120, 120,120); 
}


ParamGroup 
{ 
background-color: rgba( 161, 170, 179,140 ); 
color: rgb( 255, 0, 0 ); 
border-bottom-style: solid; 
border-bottom-width: 1px; 
border-bottom-color: rgb( 74, 87, 102 );  
} 

ParamGroup Header  
{ 
color: black; text-align: middle;
background-color: qlineargradient(spread:repeat, x1:0, y1:0.1, x2:0, y2:0.9, stop:0 rgb(163, 172, 180), stop:1 rgb(219, 231, 241)); border-right-style: solid; 
border-right-width: 1px; 
border-right-color: rgb( 219, 231, 241 ); 
}


ParamGroup Header OpenCloseButton 
{ 
color:  rgb( 111, 120, 129 );
/*border-style: solid;
border-width: 1px;
border-color: rgb( 111, 120, 129 );
margin-top: 2px;
margin-bottom: 2px;*/
}

NodeSizer { background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgb(147, 157, 166), stop:1 rgb(177, 187, 196)); }
NodeSizer { margin: 2px; margin-top: 1px; border-bottom-left-radius: 4px;  border-bottom-right-radius: 4px; border-bottom-right-is-flattened: 1;  }   
/*Node[type="mtl"] > Header { background-color: rgb(77, 132, 173); }*/


/* NODE NAVIGATOR STYLES */
Node:navigator 
{ 
margin: 0px;
border-style: solid; border-width: 1px; border-color: rgb( 74, 87, 102 ); border-radius: 0px; 

/*
margin: 2px;
outline-style: solid;
outline-style: dashed; outline-width: 1px; outline-color: rgb( 255,255, 255 );
outline-radius: 0px;
outline-offset: 0px;*/

}

Node:navigator:selected 
{ 
border-color: rgb( 255, 255, 255 ); 
}

ExposedPanel { 
	background-color: rgb(180,180,180);  
	max-width: 200px; 
	spacing: 0;
}
ExposedPanel[position=left] { 
	margin-right: 1px;
	border-right: 1px solid rgb(200,200,200);
	outline: 1px solid rgb(100,100,100);
	outline-width: 0 1px 0 0;
}
ExposedPanel[position=right] { 
	margin-left: 1px;
	border-left: 1px solid rgb(200,200,200);
	outline: 1px solid rgb(100,100,100);
	outline-width: 0 0 0 1px;
}
ExposedPanel > Slot { margin: 0 -1px; }
ExposedPanel[position=left] > Slot { 
	text-align: right; 
	border-top-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgb(180,180,180), stop:1 rgb( 200, 200,200) );   
	border-bottom-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgb(180,180,180), stop:1 rgb(100,100,100) ); 
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgb(180, 180, 180), stop:1 rgb( 177, 187, 196, 128));
	}
ExposedPanel[position=right] > Slot { 
	text-align: left; 
	border-top-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgb(180,180,180), stop:0 rgb( 200, 200,200) );   
	border-bottom-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgb(180,180,180), stop:0 rgb(100,100,100) ); 
	background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgb(180, 180, 180), stop:0 rgb( 177, 187, 196, 128));
}

ExposedPanel > DnDSeperator { margin: 0 -1px; }
ExposedPanel[position=left] > DnDSeperator { background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 0), stop:1 rgba(0, 130, 255, 150)); }
ExposedPanel[position=right] > DnDSeperator { background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(0, 0, 0, 0), stop:0 rgba(0, 130, 255, 150)); }

ExposedEdge { border-color: rgb( 0, 150, 0 ); border-width: 1px; border-style: dashed; }
ExposedEdge:selected { border-color: rgb( 255, 255, 255 ); }

ExposedSocket { background-color: rgb( 0, 150, 0 ); border-shape: circle; border-style:none; margin: 6px;  min-width: 3px; min-height: 3px; max-width: 3px; max-height: 3px; } 

DnDSeperator { background-color:  rgba(0, 130, 255, 150); }

DnDSeperator:state-replace
{ background-color:  red; }


ExposedPanel { sortable: true; }

Node  Content { sortable: true; }
